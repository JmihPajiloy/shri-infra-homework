name: Release

on:
  workflow_dispatch:

env:
  REGISTRY: cr.yandex
  REGISTRY_ID: ${{ secrets.YC_REGISTRY_ID }}
  IMAGE_NAME: app
  VERSION: ${{ github.run_number }}

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run lint
      - run: npm run test

  create-branch:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - name: Create release branch
        run: |
          git checkout -b releases/$VERSION
          git push origin releases/$VERSION

  build-push-docker:
    runs-on: ubuntu-latest
    needs: create-branch
    steps:
      - uses: actions/checkout@v4
        with:
          ref: releases/$VERSION
      - name: Login to Yandex Container Registry
        run: echo "${{ secrets.YC_OAUTH_TOKEN }}" | docker login --username iam --password-stdin $REGISTRY
      - name: Build and push Docker image
        run: |
          docker build -t $REGISTRY/$REGISTRY_ID/$IMAGE_NAME:$VERSION -t $REGISTRY/$REGISTRY_ID/$IMAGE_NAME:${VERSION}_latest .
          docker push $REGISTRY/$REGISTRY_ID/$IMAGE_NAME:$VERSION
          docker push $REGISTRY/$REGISTRY_ID/$IMAGE_NAME:${VERSION}_latest

  create-tag:
    runs-on: ubuntu-latest
    needs: build-push-docker
    steps:
      - uses: actions/checkout@v4
      - name: Create release tag
        run: |
          git tag v$VERSION
          git push origin v$VERSION

  changelog-issue:
    runs-on: ubuntu-latest
    needs: create-tag
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate changelog
        id: changelog
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 --match "v*" HEAD~1 2>/dev/null || echo "")
          COMMITS=$(git log --pretty=format:"- %s" $PREV_TAG..HEAD)
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Update CHANGELOG.md
        run: |
          echo -e "# v$VERSION\n\n${{ steps.changelog.outputs.commits }}\n\n$(cat CHANGELOG.md)" > CHANGELOG.md
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add CHANGELOG.md
          git commit -m "Update changelog for v$VERSION"
          git push origin releases/$VERSION
      - name: Create release issue
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release v${process.env.VERSION}`,
              body: `**Date:** ${new Date().toISOString()}
                      **Author:** ${context.actor}
                      **Version:** ${process.env.VERSION}
                      **Commits:**\n${{ steps.changelog.outputs.commits }}
                      **Docker image:** ${process.env.REGISTRY}/${process.env.REGISTRY_ID}/${process.env.IMAGE_NAME}:${process.env.VERSION}`
            })